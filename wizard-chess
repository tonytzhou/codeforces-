/*Wizard chess, just like Muggle chess, is another popular game in Hogwarts. The rules are also exactly the same as Muggle chess, except for the figures are alive and can yell at you when you play badly.

One day Harry's knight shouted at him again. Harry was very angry and said, "Can you just trust me?!" The knight answered, "If you can show that you really know a lot about chess by solving my puzzle, I will trust you. I'm now at a square. I want to go to another square on the board. There are some squares that are taken by other pieces, so I cannot step onto these squares. Can you tell me what is the minimum number of moves I need to arrive at my destination?"

Harry needed to solve this puzzle to prove he was good at Wizard chess. Unfortunately, magic does not work well here, but programming may help. Can you help him find the minimum number of moves?

A knight may move two squares vertically and one square horizontally, or two squares horizontally and one square vertically.

Harry and Ron playing wizard chess.
Input
Each input contains t
 tests. For each test:

The first line contains an integer n
, which is the number of taken squares on the chessboard.

The second line contains n
 coordinates of the taken squares. Each of them is labeled by a lowercase letter a–h and an integer 1–8 (see the picture below).

The third line contains the coordinates of two squares, representing the starting point and the destination.

When n=−1
 is read, this indicates the end of the file.

Output
The output contains t
 lines (the same as the number of tests). Each line i
 is the answer to the i
-th test, in the format of:

Board i
: x
 moves

where i
 is the current test number, and x
 is the smallest number of moves the knight needs for test i
.

If it is impossible to reach the destination from the starting point, this line should be:

Board i
: not reachable

Note that there's no period at the end of each line. See the example below.

Examples
InputCopy
10
c1 d1 d5 c2 c3 c4 d2 d3 d4 c5
a1 f1
0

c1 b3
2
b3 c2
a1 b2
-1
OutputCopy
Board 1: 7 moves
Board 2: 1 moves
Board 3: not reachable
InputCopy
2
c2 b3
a1 c5
-1
OutputCopy
Board 1: not reachable
InputCopy
0

a1 a2
-1
OutputCopy
Board 1: 3 moves
InputCopy
16
a5 b5 c5 d5 e5 f5 g5 h5 a4 b4 c4 d4 e4 f4 g4 h4
a8 h6
24
a7 b7 c7 d7 e7 f7 g7 h7 a5 b5 c5 d5 e5 f5 g5 h5 a4 b4 c4 d4 e4 f4 g4 h4
a8 h6
-1
OutputCopy
Board 1: 5 moves
Board 2: 7 moves
InputCopy
16
a5 b5 c5 d5 e5 f5 g5 h5 a4 b4 c4 d4 e4 f4 g4 h4
h1 a3
24
a2 b2 c2 d2 e2 f2 g2 h2 a5 b5 c5 d5 e5 f5 g5 h5 a4 b4 c4 d4 e4 f4 g4 h4
h1 a3
-1
OutputCopy
Board 1: 5 moves
Board 2: 7 moves
Note
The fastest path is show as follows.


For 40% of the tests, n=0
.*/

